package digitalphotoframe;

import java.io.File;
import java.util.logging.Logger;

public class USBDetector implements Runnable {

    public static final Logger log = Logger.getLogger("mainLogger");

    public static final USBContentHandler contentHandler = new USBContentHandler();

    private static File[] oldListRoot = File.listRoots();
    private static boolean isLinux = true;

    static boolean wanted = true;

    // https://stackoverflow.com/questions/3831825/detect-usb-drive-in-java
    // by default this only finds usb DRIVES so this is like actually really perfekt
    // oh shit this wont work on linux
    @Override
    public void run() {
        try {
            log.fine("USB Detector now Starting");
            if (System.getProperty("os.name").contains("Windows")
                    || System.getProperty("os.name").contains("windows")) {
                isLinux = false;
            }
            log.info(System.getProperty("os.name"));
            log.config("running on: " + (isLinux ? "linux" : "windows"));
            if (isLinux) {
                log.severe("This Code does not currently Support Linux i am afraid.");
                System.exit(0);
            }
            while (wanted) {
                Thread.sleep(100);
                if (File.listRoots().length > oldListRoot.length) {
                    log.fine("new drive detected");
                    oldListRoot = File.listRoots();
                    log.info(oldListRoot[oldListRoot.length - 1] + " drive detected");
                    // handle the new usb drive/load its content to the display
                    contentHandler.handleNewDrive(oldListRoot[oldListRoot.length - 1]);

                } else if (File.listRoots().length < oldListRoot.length) {
                    log.info(oldListRoot[oldListRoot.length - 1] + " drive removed");

                    oldListRoot = File.listRoots();
                }
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
            // Restore interrupted state...
            Thread.currentThread().interrupt();
        }
    }

    public static void stop() {
        wanted = false;
    }
}
